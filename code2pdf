#!/usr/bin/ruby
#
# code2pdf
# Created by Lucas Caton at 2011, may 31
# Updated at 2011, may 31
#

require 'optparse'
require 'rubygems'
require 'prawn'
require 'convert_to_pdf'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: code2pdf <project path>\n\nYou can use flags as such:"

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  if ARGV.size < 1
    puts opts
    exit
  end
end

begin
  optparse.parse!
rescue OptionParser::InvalidOption => e
  puts e
  exit
end

PATH = ARGV[0].gsub(/\/$/, '')
BLACK_LIST_DIRECTORIES = ["#{PATH}/db/migrate", "#{PATH}/logs", "#{PATH}/scripts", "#{PATH}/tmp", "#{PATH}/vendor"]
BLACK_LIST_FILES = ['.DS_Store']
@code_files = []

# Check if path exists
unless File.exists? PATH
  puts "'#{PATH}' path does not exist."
  exit
end

# Read code files from path
def read_code_files_from_path(path)
  Dir.foreach path do |it|
    path_and_name = "#{path}/#{it}"
    if FileTest.directory?(path_and_name) && it != '.' && it != '..'
      read_code_files_from_path path_and_name unless BLACK_LIST_DIRECTORIES.include? path_and_name
    elsif FileTest.file?(path_and_name) && !BLACK_LIST_FILES.include?(it)
      file = File.open(path_and_name, 'r')
      file_content = ''
      line_number = 1
      file.each_line do |line|
        file_content << line.gsub(/</, '&lt;').gsub(/^/, "<color rgb='AAAAAA'>#{line_number}</color>  "); line_number += 1
      end
      file.close
      @code_files << ["File: <strong>#{path_and_name}</strong>", file_content]
    end
  end
end

read_code_files_from_path PATH

# Convert to PDF
pdf = ConvertToPDF.new 'filename.pdf', @code_files
pdf.save
